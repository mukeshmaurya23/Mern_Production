{"version":3,"file":"static/js/3173.3ecf025f.chunk.js","mappings":"8LACA,EAAyB,6BAAzB,EAAsJ,gCAAtJ,EAAsM,oCAAtM,EAAsP,gCAAtP,EAAkS,gCAAlS,EAAyU,2B,yDC2PzU,EAhPqB,SAACA,GACpB,OAAkCC,EAAAA,EAAAA,UAAS,IAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACA,GAA4BJ,EAAAA,EAAAA,UAAS,IAArC,eAAOK,EAAP,KAAeC,EAAf,MAeAC,EAAAA,EAAAA,YAAU,WACRH,GAAW,GAEXI,IAAAA,IADS,gBAGNC,MAAK,SAACC,GACLN,GAAW,GACXF,EAAaQ,EAAIC,SAElBC,OAAM,SAACC,GACNC,QAAQC,IAAIF,QAEf,IAsDH,OACE,iCACE,iBAAKG,UAAU,wBAAf,WAiCE,iBAAKA,UAAU,6BAAf,WACE,iBAAKA,UAAU,sCAAf,WACE,iBAAKA,UAAU,gBAAf,WACE,gBAAIA,UAAU,mBAAd,WACE,iBACEA,UAAU,sBACVC,MAAO,CAAEC,MAAO,UAFlB,oBADF,8CASA,+MAcF,SAAC,KAAD,CAAMC,GAAG,cAAT,UACE,mBAAQH,UAAWI,EAAnB,UACE,uDAKN,gBAAKJ,UAAU,qBAAf,UAQE,gBAAKA,UAAU,uBAAf,SA5JU,CAClB,CACEK,GAAI,EACJC,MAAO,oCAET,CACED,GAAI,EACJC,MAAO,wCAET,CACED,GAAI,EACJC,MAAO,sCAkJcC,KAAI,SAACC,GAAD,OACf,gBAAKR,UAAS,UAAKI,EAAL,kBAAd,UACE,iBAAKJ,UAAU,iBAAf,WACE,gBAAKA,UAAWI,EAAhB,UACE,gBAAKK,IAAKC,EAAUC,IAAI,gBAE1B,gBAAKX,UAAWI,EAAhB,UACE,cAAGJ,UAAWI,EAAd,SAAiCI,EAAKF,0BAQpD,gBAAKN,UAAWI,EAAhB,UACE,gBAAKJ,UAAU,qDAAf,UACE,kBACEC,MAAO,CACLW,gBAAiB,qBACjBC,QAAS,UACTC,OAAQ,IACRC,aAAc,SACdC,OAAQ,QAEVC,KAAK,SACLC,MAAO7B,EACP8B,SApJS,SAACC,GACpB9B,EAAU8B,EAAEC,OAAOH,QAoJTlB,UAAU,uBACVsB,YAAY,6BACZ,aAAW,SACX,mBAAiB,sBAIvB,iBACErB,MAAO,CACLsB,WAAY,qBACZC,WAAY,MACZX,QAAS,OAJb,UAOG1B,IAAW,SAACsC,EAAA,EAAD,KACZ,gBAAKzB,UAAU,6BAAf,UACIb,GACFF,GACAA,EAAUyC,OAAS,GACnBzC,EAAU0C,QAAO,SAACnB,GAAD,OACfA,EAAKF,MAAMsB,cAAcC,SAASxC,MAClCqC,OAAS,EACTzC,EACG0C,QAAO,SAACnB,GAAD,OAAUA,EAAKF,MAAMsB,cAAcC,SAASxC,MACnDyC,MAAK,SAACC,EAAGC,GACR,OAAO,IAAIC,KAAKD,EAAEE,WAAa,IAAID,KAAKF,EAAEG,cAE3C3B,KAAI,SAACC,GACJ,OACE,gBAAKR,UAAU,MAAf,UACE,SAACmC,EAAA,EAAD,CACE7B,MAAOE,EAAKF,MAEZ8B,MAAO5B,EAAK4B,MACZC,YAAa7B,EAAK6B,YAClBC,KAAM9B,EAAK8B,QANW9B,EAAKH,QAYrC,eAAIL,UAAU,MAAd,oCAKR,SAACuC,EAAA,EAAD,S","sources":["webpack://client/./src/components/pages/AllCompanies.module.css?3b16","components/pages/AllCompanies.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"search\":\"AllCompanies_search__ApYw1\",\"auto-grid\":\"AllCompanies_auto-grid__c+Ugi\",\"wrapper\":\"AllCompanies_wrapper__RaTl1\",\"titletext\":\"AllCompanies_titletext__NsAbB\",\"prepareButton\":\"AllCompanies_prepareButton__mJAXJ\",\"leftIMage\":\"AllCompanies_leftIMage__6NVt2\",\"rightText\":\"AllCompanies_rightText__SnYBo\",\"card\":\"AllCompanies_card__Emysa\"};","import React, { useState, useEffect } from \"react\";\r\n//import { Link } from \"react-router-dom\";\r\nimport Card from \"../../UI/Card\";\r\n\r\nimport Footer from \"../Footer/Footer\";\r\n//import data from \"../Data/data.json\";\r\nimport styles from \"./AllCompanies.module.css\";\r\nimport checkbox from \"../../images/checkbx.png\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Axios from \"axios\";\r\nimport Spinner from \"../../UI/Spinner\";\r\n\r\nconst AllCompanies = (props) => {\r\n  const [foundUser, setFoundUser] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [search, setSearch] = useState(\"\");\r\n  const dummy_items = [\r\n    {\r\n      id: 1,\r\n      title: \"Get Placed in your dream company\",\r\n    },\r\n    {\r\n      id: 2,\r\n      title: \"Most Visited Website for Job Seekers\",\r\n    },\r\n    {\r\n      id: 3,\r\n      title: \"100+ Comapnies and jobs available\",\r\n    },\r\n  ];\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    const url = `/api/getData`;\r\n    Axios.get(url)\r\n\r\n      .then((res) => {\r\n        setLoading(false);\r\n        setFoundUser(res.data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }, []);\r\n\r\n  // const createImageLink = (link) => {\r\n  //   var imageLinkIntial = \"https://drive.google.com/uc?export=view&id=\";\r\n  //   var imageLink = imageLinkIntial.concat(\r\n  //     link.substring(32, link.lastIndexOf(\"/\"))\r\n  //   );\r\n  //   console.log(\"gdrive link\", imageLink);\r\n  //   return imageLink;\r\n  // };\r\n  const handleChange = (e) => {\r\n    setSearch(e.target.value);\r\n  };\r\n  // useEffect(() => {\r\n  //   const filter = foundUser.filter((user) => {\r\n  //     return user.title.toLowerCase().includes(search.toLowerCase());\r\n  //   });\r\n\r\n  //   setFoundUser(filter);\r\n  // }, [search]);\r\n\r\n  //  const filter = (e) => {\r\n  //    const text = e.target.value;\r\n  //    if (text !== \"\") {\r\n  //      const results = foundUser.filter((user) => {\r\n  //        return user.title.toLowerCase().startsWith(text.toLowerCase());\r\n  //      });\r\n  //      setFoundUser(results);\r\n  //    } else {\r\n  //      setFoundUser(foundUser);\r\n  //    }\r\n  //    setSearch(text);\r\n  //  };\r\n\r\n  // useEffect(()=>{\r\n  //   const url = `${process.env.REACT_APP_URL}/api/getData`;\r\n  // Axios.get(url)\r\n  // .then((res)=>{\r\n\r\n  //   setFoundUser(res.data);\r\n\r\n  //   console.log(res.data);\r\n  // }).catch((err)=>{\r\n  //   console.log(err);\r\n  // })\r\n  // },[foundUser])\r\n  // const arrayBufferToBase64 = (buffer) => {\r\n  //   var binary = \"\";\r\n  //   var bytes = [].slice.call(new Uint8Array(buffer));\r\n  //   bytes.forEach((b) => (binary += String.fromCharCode(b)));\r\n\r\n  //   return window.btoa(binary);\r\n  // };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"conatiner p-3 mt-auto\">\r\n        {/* <div className=\"row justify-content-center\">\r\n          <div className=\"col-lg-5 col-md-10 pt-lg-5 pt-md-0\">\r\n            <div className=\"conatiner p-5\">\r\n              <h1 className=\"pt-md-0 pt-lg-3 \">\r\n                <span\r\n                  className=\"highlight-text pe-2\"\r\n                  style={{ color: \"orange\" }}\r\n                >\r\n                  100+\r\n                </span>\r\n                product based <br />\r\n                companies and startups <br />\r\n                that pay well.\r\n              </h1>\r\n\r\n              <h4>\r\n                Here you will find all the product based companies and startups\r\n                that pay well. This includes few service based companies too but\r\n                all of them pay atleast 6 LPA\r\n              </h4>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"col-lg-5 col-md-10\">\r\n            <img\r\n              src={img2}\r\n              className=\"img-fluid\"\r\n              alt=\"coding \"\r\n              style={{ overflow: \"hidden\", height: \"24rem\" }}\r\n            />\r\n          </div>\r\n        </div> */}\r\n        <div className=\"row justify-content-center\">\r\n          <div className=\"col-lg-5 col-md-10 pt-lg-5 pt-md-0 \">\r\n            <div className=\"conatiner p-3\">\r\n              <h1 className=\"pt-md-0 pt-lg-3 \">\r\n                <span\r\n                  className=\"highlight-text pe-2\"\r\n                  style={{ color: \"orange\" }}\r\n                >\r\n                  Latest\r\n                </span>\r\n                offcampus jobs and internships updates.\r\n              </h1>\r\n              <h4>\r\n                Here you will find the latest offcampus jobs and internships\r\n                updates. We mainly focus on students and freshers jobs although\r\n                you may find few experienced job updates as well.\r\n              </h4>\r\n\r\n              {/* <div className={styles.imageWrap}>\r\n                <img\r\n                  src={TechPlacement}\r\n                  alt=\"tech\"\r\n                  className=\"image-fluid\"\r\n                ></img>\r\n              </div> */}\r\n            </div>\r\n            <Link to=\"/coursePage\">\r\n              <button className={styles.prepareButton}>\r\n                <span>Start Preparing </span>\r\n              </button>\r\n            </Link>\r\n          </div>\r\n\r\n          <div className=\"col-lg-5 col-md-10\">\r\n            {/* <img\r\n              src={latest}\r\n              className=\"img-fluid\"\r\n              alt=\"coding \"\r\n              style={{ overflow: \"hidden\", height: \"24rem\" }}\r\n            /> */}\r\n\r\n            <div className=\"text-center mt-4 p-2\">\r\n              {dummy_items.map((item) => (\r\n                <div className={`${styles.card} card max-auto`}>\r\n                  <div className=\"card-body flex\">\r\n                    <div className={styles.leftIMage}>\r\n                      <img src={checkbox} alt=\"announce\"></img>\r\n                    </div>\r\n                    <div className={styles.rightText}>\r\n                      <p className={styles.titletext}>{item.title}</p>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className={styles.search}>\r\n          <div className=\"input-group rounded p-5 col-lg-6 col-md-10 mx-auto\">\r\n            <input\r\n              style={{\r\n                backgroundColor: \"rgb(230, 230, 250)\",\r\n                padding: \"0.75rem\",\r\n                zIndex: \"0\",\r\n                borderRadius: \"0.5rem\",\r\n                border: \"none\",\r\n              }}\r\n              type=\"search\"\r\n              value={search}\r\n              onChange={handleChange}\r\n              className=\"form-control rounded\"\r\n              placeholder=\"Search 'Amazon' 'Flipkart'\"\r\n              aria-label=\"Search\"\r\n              aria-describedby=\"search-addon\"\r\n            />\r\n          </div>\r\n        </div>\r\n        <div\r\n          style={{\r\n            background: \"rgb(241, 243, 255)\",\r\n            marginLeft: \"8px\",\r\n            padding: \"8px\",\r\n          }}\r\n        >\r\n          {loading && <Spinner />}\r\n          <div className=\"row row-cols-sm-4 mt-2 p-0\">\r\n            {!loading &&\r\n            foundUser &&\r\n            foundUser.length > 0 &&\r\n            foundUser.filter((item) =>\r\n              item.title.toLowerCase().includes(search)\r\n            ).length > 0 ? (\r\n              foundUser\r\n                .filter((item) => item.title.toLowerCase().includes(search))\r\n                .sort((a, b) => {\r\n                  return new Date(b.timestamp) - new Date(a.timestamp);\r\n                })\r\n                .map((item) => {\r\n                  return (\r\n                    <div className=\"col\" key={item.id}>\r\n                      <Card\r\n                        title={item.title}\r\n                        //image={createImageLink(item.image)}\r\n                        image={item.image}\r\n                        description={item.description}\r\n                        link={item.link}\r\n                      />\r\n                    </div>\r\n                  );\r\n                })\r\n            ) : (\r\n              <h2 className=\"p-2\">No Data Found</h2>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <Footer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AllCompanies;\r\n"],"names":["props","useState","foundUser","setFoundUser","loading","setLoading","search","setSearch","useEffect","Axios","then","res","data","catch","err","console","log","className","style","color","to","styles","id","title","map","item","src","checkbox","alt","backgroundColor","padding","zIndex","borderRadius","border","type","value","onChange","e","target","placeholder","background","marginLeft","Spinner","length","filter","toLowerCase","includes","sort","a","b","Date","timestamp","Card","image","description","link","Footer"],"sourceRoot":""}