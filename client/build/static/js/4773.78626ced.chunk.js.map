{"version":3,"file":"static/js/4773.78626ced.chunk.js","mappings":"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","sources":["webpack://client/./src/components/Jobs/Testing.module.css?b4de","UI/AddTestimonial.js","components/Jobs/Testing.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dark-mode\":\"Testing_dark-mode__DoxtA\",\"dark-light\":\"Testing_dark-light__UxKNX\",\"job-card\":\"Testing_job-card__Avw3F\",\"search\":\"Testing_search__Vyl2Q\",\"item\":\"Testing_item__-SRxK\",\"search-location\":\"Testing_search-location__6ieSb\",\"search-job\":\"Testing_search-job__UvZI4\",\"search-salary\":\"Testing_search-salary__AdKHG\",\"detail-button\":\"Testing_detail-button__7yKPL\",\"job\":\"Testing_job__a+ZhG\",\"xyz\":\"Testing_xyz__o8Xpa\",\"header\":\"Testing_header__IVVZw\",\"header-menu\":\"Testing_header-menu__aI+Av\",\"active\":\"Testing_active__0fBcJ\",\"user-settings\":\"Testing_user-settings__3Zdet\",\"user-menu\":\"Testing_user-menu__d0Fs+\",\"user-profile\":\"Testing_user-profile__MKV5b\",\"wrapper\":\"Testing_wrapper__corSE\",\"search-menu\":\"Testing_search-menu__DVV5E\",\"search-bar\":\"Testing_search-bar__e8Etc\",\"search-button\":\"Testing_search-button__WCwIj\",\"main-container\":\"Testing_main-container__zXAjl\",\"search-type\":\"Testing_search-type__YtXn2\",\"alert\":\"Testing_alert__lNWLE\",\"alert-title\":\"Testing_alert-title__po3Xs\",\"alert-subtitle\":\"Testing_alert-subtitle__8i8Uf\",\"search-buttons\":\"Testing_search-buttons__yWvC0\",\"job-wrapper\":\"Testing_job-wrapper__MEtpj\",\"job-time\":\"Testing_job-time__rwPcu\",\"job-time-title\":\"Testing_job-time-title__Mi7y6\",\"type-container\":\"Testing_type-container__aIzUU\",\"job-number\":\"Testing_job-number__29exy\",\"job-style\":\"Testing_job-style__7JgzD\",\"searched-jobs\":\"Testing_searched-jobs__XbTOa\",\"searched-bar\":\"Testing_searched-bar__rwsQ9\",\"slideY\":\"Testing_slideY__65y+x\",\"searched-show\":\"Testing_searched-show__N6FZv\",\"searched-sort\":\"Testing_searched-sort__i9WAj\",\"post-time\":\"Testing_post-time__350WH\",\"menu-icon\":\"Testing_menu-icon__ykQ76\",\"job-cards\":\"Testing_job-cards__8JYNC\",\"job-card-title\":\"Testing_job-card-title__psRsY\",\"job-card-subtitle\":\"Testing_job-card-subtitle__dmvzb\",\"job-card-header\":\"Testing_job-card-header__DSter\",\"overview-card\":\"Testing_overview-card__Pcpyc\",\"job-overview-buttons\":\"Testing_job-overview-buttons__EmkbI\",\"time-button\":\"Testing_time-button__KoflO\",\"level-button\":\"Testing_level-button__sWKKf\",\"job-stat\":\"Testing_job-stat__PCBHF\",\"job-day\":\"Testing_job-day__LZVy5\",\"overview-wrapper\":\"Testing_overview-wrapper__6Q6Jq\",\"heart\":\"Testing_heart__YlKzI\",\"job-card-buttons\":\"Testing_job-card-buttons__2pP-u\",\"card-buttons\":\"Testing_card-buttons__S3RQN\",\"card-buttons-msg\":\"Testing_card-buttons-msg__Ufc-w\",\"menu-dot\":\"Testing_menu-dot__BHout\",\"header-shadow\":\"Testing_header-shadow__vWkIE\",\"job-overview\":\"Testing_job-overview__9pv7K\",\"slide\":\"Testing_slide__xlhQm\",\"job-overview-cards\":\"Testing_job-overview-cards__snW3Q\",\"job-overview-card\":\"Testing_job-overview-card__g13ho\",\"overview-detail\":\"Testing_overview-detail__FS9Zv\",\"job-explain\":\"Testing_job-explain__PRy1M\",\"job-bg\":\"Testing_job-bg__OQZi4\",\"job-logos\":\"Testing_job-logos__CKgSc\",\"job-title-wrapper\":\"Testing_job-title-wrapper__6LxTP\",\"job-action\":\"Testing_job-action__KA0DU\",\"job-explain-content\":\"Testing_job-explain-content__dyEEa\",\"job-subtitle-wrapper\":\"Testing_job-subtitle-wrapper__tNR9+\",\"posted\":\"Testing_posted__Yuh7L\",\"company-name\":\"Testing_company-name__8sR-E\",\"comp-location\":\"Testing_comp-location__OSVxi\",\"app-number\":\"Testing_app-number__-xJmt\",\"explain-bar\":\"Testing_explain-bar__K9jyx\",\"explain-title\":\"Testing_explain-title__vyYoj\",\"explain-subtitle\":\"Testing_explain-subtitle__ZudDG\",\"explain-contents\":\"Testing_explain-contents__OCd-S\",\"overview-text\":\"Testing_overview-text__mV1XE\",\"overview-text-header\":\"Testing_overview-text-header__EhdC5\",\"overview-text-subheader\":\"Testing_overview-text-subheader__uudVE\",\"overview-text-item\":\"Testing_overview-text-item__1cYPa\",\"detail-page\":\"Testing_detail-page__Hn-Au\",\"user-name\":\"Testing_user-name__d6mFV\",\"pagination\":\"Testing_pagination__EWROB\",\"pageNumbers\":\"Testing_pageNumbers__Ezgvp\",\"location\":\"Testing_location__A9c3g\"};","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { toast } from \"react-toastify\";\r\nconst AddTestimonial = () => {\r\n  const [name, setName] = useState(\"\");\r\n  const [designation, setDesignation] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const url = `/api/postTestimonial`;\r\n    const data = {\r\n      name,\r\n      designation,\r\n      description,\r\n    };\r\n    axios\r\n      .post(url, data)\r\n      .then((res) => {\r\n        console.log(res.data);\r\n        toast.success(\"Testimonial Submitted\");\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container \">\r\n        <div className=\"row\">\r\n          <div className=\"col\">\r\n            <form onSubmit={handleSubmit}>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"name\">Name</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"name\"\r\n                  value={name}\r\n                  onChange={(e) => setName(e.target.value)}\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"designation\">Designation</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"designation\"\r\n                  value={designation}\r\n                  onChange={(e) => setDesignation(e.target.value)}\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"description\">Description</label>\r\n                <textarea\r\n                  className=\"form-control\"\r\n                  id=\"description\"\r\n                  rows=\"3\"\r\n                  value={description}\r\n                  onChange={(e) => setDescription(e.target.value)}\r\n                ></textarea>\r\n              </div>\r\n              <button\r\n                type=\"submit\"\r\n                className=\"btn btn-primary\"\r\n                style={{\r\n                  marginTop: \"1rem\",\r\n                }}\r\n              >\r\n                Submit\r\n              </button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AddTestimonial;\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\n//import ScriptTag from \"react-script-tag\";\r\nimport axios from \"axios\";\r\nimport styles from \"./Testing.module.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Modal from \"../../UI/Modal\";\r\nimport salary from \"../../images/salary.png\";\r\nimport { AuthContext } from \"../store/auth-login\";\r\nimport AddJob from \"../../adminDashboard/AddJob\";\r\nimport { toast } from \"react-toastify\";\r\nimport AddTestimonial from \"../../UI/AddTestimonial\";\r\nconst Testing = () => {\r\n  //write a logic for open description page on click of job card\r\n\r\n  const [jobs, setJobs] = useState([]);\r\n  const [Id, setId] = useState();\r\n  const [imageFailures, setImageFailures] = useState([]);\r\n\r\n  const handleError = (id) => {\r\n    setImageFailures([...imageFailures, id]);\r\n  };\r\n  //make state for storing id of job\r\n\r\n  const [loading, setLoading] = useState(true);\r\n  const [search, setSearch] = useState(\"\");\r\n  const [setSortAlphabetically] = useState(false);\r\n  const [setSortbyDate] = useState(false);\r\n  const [sortType, setSortType] = useState(\"\");\r\n  const [isModal, setModal] = useState(false);\r\n  const [isModalJob, setModalJob] = useState(false);\r\n  const [isModalResume, setModalResume] = useState(false);\r\n  const [isModalTestimonial, setModalTestimonial] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const url = `/api/getJobs`;\r\n    axios\r\n      .get(url)\r\n      .then((res) => {\r\n        setLoading(false);\r\n        setJobs(res.data);\r\n        //count the number of jobs\r\n\r\n        console.log(res.data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }, []);\r\n\r\n  const addFav = async (e) => {\r\n    const id = e.target.id;\r\n    console.log(id);\r\n    alert(e.target.id);\r\n    const url = `/api/getFavJobs/${id}`;\r\n    axios\r\n      .put(url)\r\n      .then((res) => {\r\n        setLoading(false);\r\n        toast.success(\"Added to fav\");\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const sortArray = (type) => {\r\n      const types = {\r\n        alphabetically: \"location\",\r\n        date: \"date\",\r\n        role: \"role\",\r\n      };\r\n      const sortProperty = types[type];\r\n      const sorted = [...jobs].sort((a, b) =>\r\n        a[sortProperty] > b[sortProperty] ? 1 : -1\r\n      );\r\n      setJobs(sorted);\r\n    };\r\n    sortArray(sortType);\r\n  }, [sortType]);\r\n\r\n  const handleChange = (e) => {\r\n    setSearch(e.target.value);\r\n  };\r\n  const openModal = () => {\r\n    setModal(true);\r\n  };\r\n  const closeModal = () => {\r\n    setModal(false);\r\n  };\r\n  const openModalResume = () => {\r\n    window.scrollTo(0, 0);\r\n    setModalResume(true);\r\n  };\r\n  const closeModalResume = () => {\r\n    setModalResume(false);\r\n  };\r\n  const openModalJob = () => {\r\n    setModalJob(true);\r\n  };\r\n  const closeModalJob = () => {\r\n    setModalJob(false);\r\n  };\r\n  const openModalTestimonial = () => {\r\n    setModalTestimonial(true);\r\n  };\r\n  const closeModalTestimonial = () => {\r\n    setModalTestimonial(false);\r\n  };\r\n\r\n  const addDetailPage = (e) => {\r\n    console.log(\"open description page\");\r\n    // alert(e.target.id);\r\n\r\n    jobs.map((job) => {\r\n      // alert(job._id);\r\n      setId(e.target.id);\r\n\r\n      const wrapper = document.querySelector(`.${styles.wrapper}`);\r\n      const header = document.querySelector(`.${styles.header}`);\r\n      wrapper.classList.add(`${styles[\"detail-page\"]}`);\r\n      const jobbg = document.querySelector(`.${styles[\"job-bg\"]}`);\r\n      const number = Math.floor(Math.random() * 10);\r\n      const url = `https://unsplash.it/640/425?image=${number}`;\r\n      jobbg.style.backgroundImage = `url(${url})`;\r\n      wrapper.addEventListener(\"scroll\", (e) => {\r\n        window.scrollTo(0, 0);\r\n        e.target.scrollTop > 30\r\n          ? header.classList.add(\"header-shadow\")\r\n          : header.classList.remove(\"header-shadow\");\r\n      });\r\n      //on double click remove ${styles[\"detail-page\"]} from wrapper class\r\n      wrapper.addEventListener(\"dblclick\", () => {\r\n        wrapper.classList.remove(`${styles[\"detail-page\"]}`);\r\n      });\r\n    });\r\n  };\r\n  //pagination\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [jobsPerPage] = useState(6);\r\n  const indexOfLastJob = currentPage * jobsPerPage;\r\n  const indexOfFirstJob = indexOfLastJob - jobsPerPage;\r\n  const currentJobs = jobs.slice(indexOfFirstJob, indexOfLastJob);\r\n  const paginate = (pageNumber) => setCurrentPage(pageNumber);\r\n  const nextPage = () => setCurrentPage(currentPage + 1);\r\n  const prevPage = () => setCurrentPage(currentPage - 1);\r\n  const lastPage = () => setCurrentPage(Math.ceil(jobs.length / jobsPerPage));\r\n  const firstPage = () => setCurrentPage(1);\r\n  const pageNumbers = [];\r\n  for (let i = 1; i <= Math.ceil(jobs.length / jobsPerPage); i++) {\r\n    pageNumbers.push(i);\r\n  }\r\n  const renderPageNumbers = pageNumbers.map((number) => {\r\n    if (number === currentPage) {\r\n      return (\r\n        <li key={number} className={styles.active}>\r\n          {number}\r\n        </li>\r\n      );\r\n    } else {\r\n      return (\r\n        <li key={number} onClick={() => paginate(number)}>\r\n          {number}\r\n        </li>\r\n      );\r\n    }\r\n  });\r\n\r\n  const [state] = useContext(AuthContext);\r\n\r\n  return (\r\n    <>\r\n      <div class={styles.job}>\r\n        <div class={styles.header}>\r\n          <div class={styles[\"header-menu\"]}>\r\n            <a href=\"#\" class={styles.active}>\r\n              Find Job\r\n            </a>\r\n            <Link to=\"/company-review/comment\">Company Review</Link>\r\n            {isModal && (\r\n              <Modal closing={closeModal}>\r\n                <>\r\n                  <pre>\r\n                    <h6>If You Want to find Salary for any companies </h6>\r\n                  </pre>\r\n\r\n                  <pre>\r\n                    <h6>Search e.g SDE 1 Adobe Leetcode on browser</h6>\r\n                  </pre>\r\n                  <img\r\n                    src={salary}\r\n                    alt=\"\"\r\n                    style={{ width: \"120%\", height: \"50vh\" }}\r\n                  />\r\n                </>\r\n              </Modal>\r\n            )}\r\n            <Link to=\"#\" onClick={openModal}>\r\n              Find Salaries\r\n            </Link>\r\n          </div>\r\n        </div>\r\n        <div class={`${styles.wrapper} `}>\r\n          <div class={styles[\"search-menu\"]}>\r\n            <div class={styles[\"search-bar\"]}>\r\n              <input\r\n                type=\"text\"\r\n                class={styles[\"search-box\"]}\r\n                autofocus\r\n                placeholder=\"Search for jobs\"\r\n                onChange={handleChange}\r\n                value={search}\r\n              />\r\n              <div class={`${styles.search} `}></div>\r\n            </div>\r\n            <div class={styles[\"search-location\"]}>\r\n              <svg\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                viewBox=\"0 0 24 24\"\r\n                fill=\"none\"\r\n                stroke=\"currentColor\"\r\n                stroke-width=\"2\"\r\n                stroke-linecap=\"round\"\r\n                stroke-linejoin=\"round\"\r\n                class={`${styles.feather} ${styles[\"feather-map-pin\"]}`}\r\n              >\r\n                <path d=\"M21 10c0 7-9 13-9 13s-9-6-9-13a9 9 0 0118 0z\" />\r\n                <circle cx=\"12\" cy=\"10\" r=\"3\" />\r\n              </svg>\r\n              <select\r\n                id=\"location-filter\"\r\n                onChange={(e) => setSortType(e.target.value)}\r\n                className={`${styles.location} ${styles.selectlist}`}\r\n              >\r\n                <option selected=\"selected\" value=\"\">\r\n                  All Locations\r\n                </option>\r\n                <option value=\"Hyderabad\">Hyderabad</option>\r\n                <option value=\"Bengalore\">Bengalore</option>\r\n                <option value=\"Mumbai\">Mumbai</option>\r\n                <option value=\"Pune\">Pune</option>\r\n              </select>\r\n            </div>\r\n            {isModalJob && (\r\n              <Modal closing={closeModalJob} title=\"Add Jobs\">\r\n                <AddJob setModal={setModal} />\r\n              </Modal>\r\n            )}\r\n            {(state && state.user && state.user.role === \"admin\") ||\r\n            state.user.role === \"recruiter\" ? (\r\n              <button class={styles[\"search-button\"]} onClick={openModalJob}>\r\n                Post Jobs\r\n              </button>\r\n            ) : (\r\n              <button\r\n                class={styles[\"search-button\"]}\r\n                onClick={openModalTestimonial}\r\n              >\r\n                Post Achivement\r\n              </button>\r\n            )}\r\n          </div>\r\n          {isModalTestimonial && (\r\n            <Modal closing={closeModalTestimonial} title=\"Add Testimonial\">\r\n              <AddTestimonial setModal={setModal} />\r\n            </Modal>\r\n          )}\r\n          <div class={styles[\"main-container\"]}>\r\n            <div class={styles[\"search-type\"]}>\r\n              <div class={styles.alert}>\r\n                <div class={styles[\"alert-title\"]}>Create Job Alert</div>\r\n                <div class={styles[\"alert-subtitle\"]}>\r\n                  Create a job alert now and never miss a job\r\n                </div>\r\n                <input type=\"text\" placeholder=\"Enter job keyword\" />\r\n                <button\r\n                  class={styles[\"search-buttons\"]}\r\n                  onClick={() => {\r\n                    toast.success(\"Job Alert Created Successfully\");\r\n                  }}\r\n                >\r\n                  Create Job Alerts\r\n                </button>\r\n              </div>\r\n              <div class={styles[\"job-time\"]}>\r\n                <div class={styles[\"job-time-title\"]}>Type of Employment</div>\r\n                <div class={styles[\"job-wrapper\"]}>\r\n                  <div class={styles[\"type-container\"]}>\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      id=\"job1\"\r\n                      class={styles[\"job-style\"]}\r\n                      checked\r\n                    />\r\n                    <label for=\"job1\">Full Time Jobs</label>\r\n                    <span class={styles[\"job-number\"]}>56</span>\r\n                  </div>\r\n                  <div class={styles[\"type-container\"]}>\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      id=\"job2\"\r\n                      class={styles[\"job-style\"]}\r\n                    />\r\n                    <label for=\"job2\">Part Time Jobs</label>\r\n                    <span class={styles[\"job-number\"]}>43</span>\r\n                  </div>\r\n                  <div class={styles[\"type-container\"]}>\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      id=\"job3\"\r\n                      class={styles[\"job-style\"]}\r\n                    />\r\n                    <label for=\"job3\">Remote Jobs</label>\r\n                    <span class={styles[\"job-number\"]}>24</span>\r\n                  </div>\r\n                  <div class={styles[\"type-container\"]}>\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      id=\"job4\"\r\n                      class={styles[\"job-style\"]}\r\n                    />\r\n                    <label for=\"job4\">Internship Jobs</label>\r\n                    <span class={styles[\"job-number\"]}>27</span>\r\n                  </div>\r\n                  <div class={styles[\"type-container\"]}>\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      id=\"job5\"\r\n                      class={styles[\"job-style\"]}\r\n                    />\r\n                    <label for=\"job5\">Contract</label>\r\n                    <span class={styles[\"job-number\"]}>76</span>\r\n                  </div>\r\n                  <div class={styles[\"type-container\"]}>\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      id=\"job6\"\r\n                      class={styles[\"job-style\"]}\r\n                    />\r\n                    <label for=\"job6\">Training Jobs</label>\r\n                    <span class={styles[\"job-number\"]}>28</span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class={styles[\"job-time\"]}>\r\n                <div class={styles[\"job-time-title\"]}>Seniority Level</div>\r\n                <div class={styles[\"job-wrapper\"]}>\r\n                  <div class={styles[\"type-container\"]}>\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      id=\"job7\"\r\n                      class={styles[\"job-style\"]}\r\n                    />\r\n                    <label for=\"job7\">Student Level</label>\r\n                    <span class={styles[\"job-number\"]}>98</span>\r\n                  </div>\r\n                  <div class={styles[\"type-container\"]}>\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      id=\"job8\"\r\n                      class={styles[\"job-style\"]}\r\n                    />\r\n                    <label for=\"job8\">Entry Level</label>\r\n                    <span class={styles[\"job-number\"]}>44</span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class={styles[\"job-time\"]}>\r\n                <div class={styles[\"job-time-title\"]}>Salary Range</div>\r\n                <div class={styles[\"job-wrapper\"]}>\r\n                  <div class={styles[\"type-container\"]}>\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      id=\"job1\"\r\n                      class={styles[\"job-style\"]}\r\n                    />\r\n                    <label for=\"job1\">$700 - $1000</label>\r\n                    <span class={styles[\"job-number\"]}>49</span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class={styles[\"searched-jobs\"]}>\r\n              <div class={styles[\"searched-bar\"]}>\r\n                <div class={styles[\"searched-show\"]}>\r\n                  Showing 1 - {currentJobs.length} of {jobs.length} Jobs\r\n                </div>\r\n                <div class={styles[\"searched-sort\"]}>\r\n                  Sort by:{\" \"}\r\n                  <span class={styles[\"post-time\"]}>\r\n                    {\" \"}\r\n                    <select\r\n                      id=\"location-filter\"\r\n                      className={`${styles.location} ${styles.selectlist}`}\r\n                    >\r\n                      <option selected=\"selected\" value=\"\">\r\n                        Full Time\r\n                      </option>\r\n                      <option value=\"parttime\">Part Time</option>\r\n                    </select>\r\n                  </span>\r\n                </div>\r\n              </div>\r\n              {/* //yaha map karna hai data loop karna hai */}\r\n\r\n              <div class={styles[\"job-cards\"]}>\r\n                {currentJobs\r\n                  .filter(\r\n                    (item) =>\r\n                      item.title.toLowerCase().includes(search) ||\r\n                      item.companyName.toLowerCase().includes(search)\r\n                  )\r\n\r\n                  .map((job) => {\r\n                    if (imageFailures.includes(job.companyName)) {\r\n                      return (\r\n                        <div class={styles[\"job-card\"]}>\r\n                          <div class={styles[\"job-card-header\"]}>\r\n                            <div\r\n                              class={styles[\"job-card-logo\"]}\r\n                              style={{\r\n                                width: \"116px\",\r\n                                height: \"83px\",\r\n                                padding: \"10px\",\r\n                                fontWeight: \"bold\",\r\n                                fontSize: \"20px\",\r\n                              }}\r\n                            >\r\n                              {job.companyName}\r\n                            </div>\r\n\r\n                            <div class={styles[\"menu-dot\"]}></div>\r\n                          </div>\r\n                          <div class={styles[\"job-card-title\"]}>\r\n                            {job.title}\r\n                          </div>\r\n                          <div class={styles[\"job-card-subtitle\"]}>\r\n                            {job.subTitle}\r\n                          </div>\r\n                          <div class={styles[\"job-detail-buttons\"]}>\r\n                            <button\r\n                              class={`${styles[\"search-buttons\"]} ${styles[\"detail-button\"]}`}\r\n                            >\r\n                              {job.role}\r\n                            </button>\r\n                            <button\r\n                              class={`${styles[\"search-buttons\"]} ${styles[\"detail-button\"]}`}\r\n                            >\r\n                              {job.experience}\r\n                            </button>\r\n                            <button\r\n                              class={`${styles[\"search-buttons\"]} ${styles[\"detail-button\"]}`}\r\n                            >\r\n                              {job.level}\r\n                            </button>\r\n                          </div>\r\n                          <div class={styles[\"job-card-buttons\"]}>\r\n                            <button\r\n                              onClick={addDetailPage}\r\n                              id={job._id}\r\n                              class={`${styles[\"search-buttons\"]} ${styles[\"card-buttons\"]}`}\r\n                            >\r\n                              Apply Now\r\n                            </button>\r\n                            <button\r\n                              class={`${styles[\"search-buttons\"]} ${styles[\"card-buttons-msg\"]}`}\r\n                            >\r\n                              <Link\r\n                                to=\"/company-review/comment\"\r\n                                style={{\r\n                                  textDecoration: \"none\",\r\n                                  color: \"#111111\",\r\n                                }}\r\n                              >\r\n                                Message\r\n                              </Link>\r\n                            </button>\r\n                          </div>\r\n                        </div>\r\n                      );\r\n                    }\r\n\r\n                    return (\r\n                      <div class={styles[\"job-card\"]}>\r\n                        <div class={styles[\"job-card-header\"]}>\r\n                          <img\r\n                            src={job.logo}\r\n                            alt=\"logo\"\r\n                            onError={() => handleError(job.companyName)}\r\n                          />\r\n                          <div class={styles[\"menu-dot\"]}></div>\r\n                        </div>\r\n                        <div class={styles[\"job-card-title\"]}>{job.title}</div>\r\n                        <div class={styles[\"job-card-subtitle\"]}>\r\n                          {job.subTitle}\r\n                        </div>\r\n                        <div class={styles[\"job-detail-buttons\"]}>\r\n                          <button\r\n                            class={`${styles[\"search-buttons\"]} ${styles[\"detail-button\"]}`}\r\n                          >\r\n                            {job.role}\r\n                          </button>\r\n                          <button\r\n                            class={`${styles[\"search-buttons\"]} ${styles[\"detail-button\"]}`}\r\n                          >\r\n                            {job.experience}\r\n                          </button>\r\n                          <button\r\n                            class={`${styles[\"search-buttons\"]} ${styles[\"detail-button\"]}`}\r\n                          >\r\n                            {job.level}\r\n                          </button>\r\n                          <button\r\n                            class={`${styles[\"search-buttons\"]} ${styles[\"fav-button\"]}`}\r\n                            style={{\r\n                              marginLeft: \"10px\",\r\n\r\n                              border: \"none\",\r\n                            }}\r\n                            id={job._id}\r\n                            onClick={addFav}\r\n                          >\r\n                            <i class=\"fas fa-heart\"></i>\r\n                          </button>\r\n                        </div>\r\n                        <div class={styles[\"job-card-buttons\"]}>\r\n                          <button\r\n                            onClick={addDetailPage}\r\n                            id={job._id}\r\n                            class={`${styles[\"search-buttons\"]} ${styles[\"card-buttons\"]}`}\r\n                          >\r\n                            Apply Now\r\n                          </button>\r\n                          <button\r\n                            class={`${styles[\"search-buttons\"]} ${styles[\"card-buttons-msg\"]}`}\r\n                          >\r\n                            <Link\r\n                              to=\"/company-review/comment\"\r\n                              style={{\r\n                                textDecoration: \"none\",\r\n                                color: \"#111111\",\r\n                              }}\r\n                            >\r\n                              Message\r\n                            </Link>\r\n                          </button>\r\n                        </div>\r\n                      </div>\r\n                    );\r\n                  })}\r\n              </div>\r\n              <div class={styles[\"job-overview\"]}>\r\n                <div class={styles[\"job-overview-cards\"]}>\r\n                  {currentJobs.map((job) => {\r\n                    return (\r\n                      <div class={styles[\"job-overview-card\"]}>\r\n                        <div\r\n                          class={`${styles[\"job-card\"]} ${styles[\"overview-card\"]}`}\r\n                        >\r\n                          <div class={styles[\"overview-wrapper\"]}>\r\n                            <img src={job.logo} alt=\"logo\" />\r\n                            <div class={styles[\"overview-detail\"]}>\r\n                              <div class={styles[\"job-card-title\"]}>\r\n                                {job.title}\r\n                              </div>\r\n                              <div class={styles[\"job-card-subtitle\"]}>\r\n                                {job.location}\r\n                              </div>\r\n                            </div>\r\n                            <svg\r\n                              xmlns=\"http://www.w3.org/2000/svg\"\r\n                              viewBox=\"0 0 24 24\"\r\n                              fill=\"none\"\r\n                              stroke=\"currentColor\"\r\n                              stroke-width=\"2\"\r\n                              stroke-linecap=\"round\"\r\n                              stroke-linejoin=\"round\"\r\n                              class={`${styles.feather} ${styles[\"feather-heart\"]} ${styles.heart}`}\r\n                            >\r\n                              <path d=\"M20.8 4.6a5.5 5.5 0 00-7.7 0l-1.1 1-1-1a5.5 5.5 0 00-7.8 7.8l1 1 7.8 7.8 7.8-7.7 1-1.1a5.5 5.5 0 000-7.8z\" />\r\n                            </svg>\r\n                          </div>\r\n                          <div class={styles[\"job-overview-buttons\"]}>\r\n                            <div\r\n                              class={`${styles[\"search-buttons\"]} ${styles[\"time-button\"]}`}\r\n                            >\r\n                              {job.role}\r\n                            </div>\r\n                            <div\r\n                              class={`${styles[\"search-buttons\"]} ${styles[\"level-button\"]}`}\r\n                            >\r\n                              {job.level}\r\n                            </div>\r\n                            <div class={styles[\"job-stat\"]}>{job.jobStat}</div>\r\n                            <div class={styles[\"job-day\"]}>{job.jobDays}</div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    );\r\n                  })}\r\n                </div>\r\n\r\n                <div class={styles[\"job-explain\"]}>\r\n                  <img class={styles[\"job-bg\"]} alt=\"\" />\r\n                  <div class={styles[\"job-logos\"]}>\r\n                    {currentJobs.map((job) => {\r\n                      if (job._id === Id) {\r\n                        return <img src={job.logo} alt=\"\" />;\r\n                      }\r\n                    })}\r\n                  </div>\r\n                  {/* //yaha map karna hai */}\r\n                  {currentJobs.map((job) => {\r\n                    if (job._id === Id) {\r\n                      // alert(Id + \" \" + job._id);\r\n                      return (\r\n                        <div class={styles[\"job-explain-content\"]}>\r\n                          <div class={styles[\"job-title-wrapper\"]}>\r\n                            <div class={styles[\"job-card-title\"]}>\r\n                              {job.title}\r\n                            </div>\r\n                            <div class={styles[\"job-action\"]}>\r\n                              <svg\r\n                                xmlns=\"http://www.w3.org/2000/svg\"\r\n                                viewBox=\"0 0 24 24\"\r\n                                fill=\"none\"\r\n                                stroke=\"currentColor\"\r\n                                stroke-width=\"2\"\r\n                                stroke-linecap=\"round\"\r\n                                stroke-linejoin=\"round\"\r\n                                class={`${styles.feather} ${styles[\"feather-heart\"]} ${styles.heart}`}\r\n                              >\r\n                                <path d=\"M20.8 4.6a5.5 5.5 0 00-7.7 0l-1.1 1-1-1a5.5 5.5 0 00-7.8 7.8l1 1 7.8 7.8 7.8-7.7 1-1.1a5.5 5.5 0 000-7.8z\" />\r\n                              </svg>\r\n\r\n                              {/* <div class={styles[\"share-modal\"]}>\r\n                                <div class={styles[\"share-modal-content\"]}>\r\n                                  <div class={styles[\"share-modal-title\"]}>\r\n                                    Share Job\r\n                                  </div>\r\n                                  <div class={styles[\"share-modal-link\"]}>\r\n                                    {window.location.href}\r\n                                  </div>\r\n                                  <div class={styles[\"share-modal-icons\"]}>\r\n                                    <svg\r\n                                      xmlns=\"http://www.w3.org/2000/svg\"\r\n                                      viewBox=\"0 0 24 24\"\r\n                                      fill=\"none\"\r\n                                      stroke=\"currentColor\"\r\n                                      stroke-width=\"2\"\r\n                                      stroke-linecap=\"round\"\r\n                                      stroke-linejoin=\"round\"\r\n                                      class={`${styles.feather} ${styles[\"feather-facebook\"]}`}\r\n                                    >\r\n                                      <path d=\"M18 2h-3a5 5 0 00-5 5v3H7v4h3v8h4v-8h3l1-4h-4V7a1 1 0 011-1h3z\" />\r\n                                    </svg>\r\n                                    <svg\r\n                                      xmlns=\"http://www.w3.org/2000/svg\"\r\n                                      viewBox=\"0 0 24 24\"\r\n                                      fill=\"none\"\r\n                                      stroke=\"currentColor\"\r\n                                      stroke-width=\"2\"\r\n                                      stroke-linecap=\"round\"\r\n                                      stroke-linejoin=\"round\"\r\n                                      class={`${styles.feather} ${styles[\"feather-twitter\"]}`}\r\n                                    >\r\n                                      <path d=\"M23 3a10.93 10.93 0 01-3.08.84A5.46 5.46 0 0021.89 1a10.79 10.79 0 01-3.4 1.3A5.43 5.43 0 0012.27.64a5.44 5.44 0 00-5.44 5.44 5.5 5.5 0 00.16 1.41A15.4 15.4 0 012.8 3.64a5.43 5.43 0 001.68 7.3A5.36 5.36 0 013.5 9.95v.07a5.43 5.43 0 004.29 5.3 5.5 5.5 0 01-2.52.09 5.44 5.44 0 005.07 3.8A10.9 10.9 0 012.9 20.32a11 11 0 006.1 1.8c7.3 0 11.3-6 11.3-11.3v-.46a8.08 8.08 0 002-2.07 7.7 7.7 0 01-2.28.63 3.85 3.85 0 001.75-2.2z\" />\r\n                                    </svg>\r\n                                    <svg\r\n                                      xmlns=\"http://www.w3.org/2000/svg\"\r\n                                      viewBox=\"0 0 24 24\"\r\n                                      fill=\"none\"\r\n                                      stroke=\"currentColor\"\r\n                                      stroke-width=\"2\"\r\n                                      stroke-linecap=\"round\"\r\n                                      stroke-linejoin=\"round\"\r\n                                      class={`${styles.feather} ${styles[\"feather-linkedin\"]}`}\r\n                                    >\r\n                                      <path d=\"M17 8h-3a2 2 0 00-2 2v6a2 2 0 002 2h3a2 2 0 002-2v-6a2 2 0 00-2-2zm-3 8V8m0 0v6m0-6h3m-3 0h-3M6 9H4a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2v-6a2 2 0 00-2-2zm0 8V9\" />\r\n                                    </svg>\r\n                                    <svg\r\n                                      xmlns=\"http://www.w3.org/2000/svg\"\r\n                                      viewBox=\"0 0 24 24\"\r\n                                      fill=\"none\"\r\n                                      stroke=\"currentColor\"\r\n                                      stroke-width=\"2\"\r\n                                      stroke-linecap=\"round\"\r\n                                      stroke-linejoin=\"round\"\r\n                                      class={`${styles.feather} ${styles[\"feather-mail\"]}`}\r\n                                    >\r\n                                      <path d=\"M4 4h16a2 2 0 012 2v12a2 2 0 01-2 2H4a2 2 0 01-2-2V6a2 2 0 012-2z\" />\r\n                                      <polyline points=\"22,6 12,13 2,6\" />\r\n                                    </svg>\r\n                                  </div>\r\n                                </div>\r\n                              </div> */}\r\n\r\n                              <svg\r\n                                xmlns=\"http://www.w3.org/2000/svg\"\r\n                                viewBox=\"0 0 24 24\"\r\n                                fill=\"none\"\r\n                                stroke=\"currentColor\"\r\n                                stroke-width=\"2\"\r\n                                stroke-linecap=\"round\"\r\n                                stroke-linejoin=\"round\"\r\n                                class={`${styles.feather} ${styles[\"feather-share-2\"]}`}\r\n                              >\r\n                                <circle cx=\"18\" cy=\"5\" r=\"3\" />\r\n                                <circle cx=\"6\" cy=\"12\" r=\"3\" />\r\n                                <circle cx=\"18\" cy=\"19\" r=\"3\" />\r\n                                <path d=\"M8.6 13.5l6.8 4M15.4 6.5l-6.8 4\" />\r\n                              </svg>\r\n                            </div>\r\n                          </div>\r\n                          <div class={styles[\"job-subtitle-wrapper\"]}>\r\n                            <div class={styles[\"company-name\"]}>\r\n                              {job.companyName}\r\n                              <span class={styles[\"comp-location\"]}>\r\n                                {job.location}\r\n                              </span>\r\n                            </div>\r\n                            <div class={styles.posted}>\r\n                              {job.jobDays}\r\n                              <span class={styles[\"app-number\"]}>\r\n                                {job.applicants}\r\n                              </span>\r\n                            </div>\r\n                          </div>\r\n                          <div class={styles[\"explain-bar\"]}>\r\n                            <div class={styles[\"explain-contents\"]}>\r\n                              <div class={styles[\"explain-title\"]}>\r\n                                Experience\r\n                              </div>\r\n                              <div class={styles[\"explain-subtitle\"]}>\r\n                                {job.experience}\r\n                              </div>\r\n                            </div>\r\n                            <div class={styles[\"explain-contents\"]}>\r\n                              <div class={styles[\"explain-title\"]}>\r\n                                Work Level\r\n                              </div>\r\n                              <div class={styles[\"explain-subtitle\"]}>\r\n                                {job.level}\r\n                              </div>\r\n                            </div>\r\n                            <div class={styles[\"explain-contents\"]}>\r\n                              <div class={styles[\"explain-title\"]}>\r\n                                Employee Type\r\n                              </div>\r\n                              <div class={styles[\"explain-subtitle\"]}>\r\n                                {job.role}\r\n                              </div>\r\n                            </div>\r\n                            <div class={styles[\"explain-contents\"]}>\r\n                              <div class={styles[\"explain-title\"]}>\r\n                                Offer Salary\r\n                              </div>\r\n                              <div class={styles[\"explain-subtitle\"]}>\r\n                                {job.salary}\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                          <div class={styles[\"overview-text\"]}>\r\n                            <div class={styles[\"overview-text-header\"]}>\r\n                              Overview\r\n                            </div>\r\n                            <div class={styles[\"overview-text-subheader\"]}>\r\n                              {job.overview}\r\n                            </div>\r\n                          </div>\r\n                          <div class={styles[\"overview-text\"]}>\r\n                            <div class={styles[\"overview-text-header\"]}>\r\n                              Job Description\r\n                            </div>\r\n\r\n                            {job.jobDesc.map((item, index) => (\r\n                              <div\r\n                                class={styles[\"overview-text-item\"]}\r\n                                key={index}\r\n                              >\r\n                                {item.description}\r\n                              </div>\r\n                            ))}\r\n                            <div class={styles[\"overview-text-item\"]}>\r\n                              A portfolio that highlights your approach to\r\n                              problem solving, as well as you skills in UI.\r\n                            </div>\r\n                            <div class={styles[\"overview-text-item\"]}>\r\n                              Experience conducting research and building out\r\n                              smooth flows.\r\n                            </div>\r\n                            <div class={styles[\"overview-text-item\"]}>\r\n                              Excellent communication skills with a well-defined\r\n                              design process.\r\n                            </div>\r\n                            <div class={styles[\"overview-text-item\"]}>\r\n                              Familiarity with design tools like Sketch and\r\n                              Figma\r\n                            </div>\r\n                            <div class={styles[\"overview-text-item\"]}>\r\n                              Up-level our overall design and bring consistency\r\n                              to end-user facing properties\r\n                            </div>\r\n                            {isModalResume && (\r\n                              <Modal closing={closeModalResume}>\r\n                                <>\r\n                                  <h4\r\n                                    style={{\r\n                                      fontSize: \"18px\",\r\n                                      fontWeight: \"bold\",\r\n                                    }}\r\n                                  >\r\n                                    TechSmart Resume Analyzer\r\n                                  </h4>\r\n                                  <p\r\n                                    style={{\r\n                                      fontSize: \"14px\",\r\n                                      color: \"gray\",\r\n                                    }}\r\n                                  >\r\n                                    Upload your resume and we will analyze it\r\n                                    using our Some technology to see if you are\r\n                                    a good fit for this job.\r\n                                  </p>\r\n                                  <div class=\"d-flex justify-content-between\">\r\n                                    <button\r\n                                      type=\"button\"\r\n                                      class=\"btn btn-primary m-3\"\r\n                                    >\r\n                                      <Link\r\n                                        style={{\r\n                                          color: \"white\",\r\n                                          textDecoration: \"none\",\r\n                                        }}\r\n                                        to={\r\n                                          \"/alljobs/\" +\r\n                                          job._id +\r\n                                          \"/resume-analyzer\"\r\n                                        }\r\n                                      >\r\n                                        Analyze Resume\r\n                                      </Link>\r\n                                    </button>\r\n                                    <button\r\n                                      type=\"button\"\r\n                                      class=\"btn btn-secondary m-3\"\r\n                                    >\r\n                                      Apply Without Analyze\r\n                                    </button>\r\n                                  </div>\r\n                                </>\r\n                              </Modal>\r\n                            )}\r\n                            <button\r\n                              onClick={openModalResume}\r\n                              class={`${styles[\"search-buttons\"]} ${styles[\"card-buttons\"]}`}\r\n                            >\r\n                              Apply Now\r\n                            </button>\r\n                          </div>\r\n                        </div>\r\n                      );\r\n                    }\r\n                  })}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* //pagination */}\r\n          <div className={styles.pagination}>\r\n            <ul className={styles.pageNumbers}>\r\n              <li>\r\n                <button\r\n                  onClick={firstPage}\r\n                  disabled={currentPage === pageNumbers[0] ? true : false}\r\n                >\r\n                  <i class=\"fas fa-angle-double-left\"></i>\r\n                </button>\r\n              </li>\r\n              <li>\r\n                <button\r\n                  onClick={prevPage}\r\n                  disabled={currentPage === pageNumbers[0] ? true : false}\r\n                >\r\n                  <i class=\"fas fa-angle-left\"></i>\r\n                </button>\r\n              </li>\r\n              {renderPageNumbers}\r\n              <li>\r\n                <button\r\n                  onClick={nextPage}\r\n                  disabled={\r\n                    currentPage === pageNumbers[pageNumbers.length - 1]\r\n                      ? true\r\n                      : false\r\n                  }\r\n                >\r\n                  <i class=\"fas fa-angle-right\"></i>\r\n                </button>\r\n              </li>\r\n              <li>\r\n                <button\r\n                  onClick={lastPage}\r\n                  disabled={\r\n                    currentPage === pageNumbers[pageNumbers.length - 1]\r\n                      ? true\r\n                      : false\r\n                  }\r\n                >\r\n                  <i class=\"fas fa-angle-double-right\"></i>\r\n                </button>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n\r\n          <div className={styles.lpagignate}>\r\n            <span\r\n              className={`${styles.jPaginateBack} ${styles.pagearrow}`}\r\n            ></span>\r\n            <ul className={styles.pagination}></ul>\r\n            <span\r\n              className={`${styles.jPaginateNext} ${styles.pagearrow}`}\r\n            ></span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default Testing;\r\n"],"names":["useState","name","setName","designation","setDesignation","description","setDescription","className","onSubmit","e","preventDefault","data","axios","then","res","console","log","toast","catch","err","htmlFor","type","id","value","onChange","target","rows","style","marginTop","jobs","setJobs","Id","setId","imageFailures","setImageFailures","setLoading","search","setSearch","sortType","setSortType","isModal","setModal","isModalJob","setModalJob","isModalResume","setModalResume","isModalTestimonial","setModalTestimonial","useEffect","addFav","alert","url","sortProperty","alphabetically","date","role","sorted","sort","a","b","sortArray","openModalResume","window","scrollTo","closeModalResume","addDetailPage","map","job","wrapper","document","querySelector","styles","header","classList","add","jobbg","number","Math","floor","random","backgroundImage","addEventListener","scrollTop","remove","currentPage","setCurrentPage","jobsPerPage","indexOfLastJob","indexOfFirstJob","currentJobs","slice","pageNumbers","i","ceil","length","push","renderPageNumbers","onClick","useContext","AuthContext","state","class","href","to","Modal","closing","src","salary","alt","width","height","autofocus","placeholder","xmlns","viewBox","fill","stroke","d","cx","cy","r","selected","title","AddJob","user","checked","for","filter","item","toLowerCase","includes","companyName","padding","fontWeight","fontSize","subTitle","experience","level","_id","textDecoration","color","logo","onError","marginLeft","border","location","jobStat","jobDays","applicants","overview","jobDesc","index","disabled"],"sourceRoot":""}