{"version":3,"file":"static/js/7213.2a41ed12.chunk.js","mappings":"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","sources":["UI/comment/SingleComment.js","UI/comment/ReplyComment.js","UI/comment/Comments.js","UI/comment/CommentMain.js","constant.js"],"sourcesContent":["import React, { useState, useContext } from \"react\";\r\nimport { AuthContext } from \"../../components/store/auth-login\";\r\nimport Axios from \"axios\";\r\nimport { toast } from \"react-toastify\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { POST_COMMENTS } from \"../../constant\";\r\nconst SingleComment = (props) => {\r\n  const [state] = useContext(AuthContext);\r\n  const [CommentValue, setCommentValue] = useState(\"\");\r\n  const [OpenReply, setOpenReply] = useState(false);\r\n\r\n  const handleChange = (e) => {\r\n    setCommentValue(e.currentTarget.value);\r\n  };\r\n\r\n  const openReply = () => {\r\n    setOpenReply(!OpenReply);\r\n  };\r\n  //convert createdAt to proper date format\r\n  const date = new Date(props.comment.createdAt);\r\n  const year = date.getFullYear();\r\n  const month = date.getMonth() + 1;\r\n  const day = date.getDate();\r\n  const hours = date.getHours();\r\n  const minutes = date.getMinutes();\r\n  const seconds = date.getSeconds();\r\n  const createdAt = `${year}-${month}-${day} ${hours}:${minutes}:${seconds}`;\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    //alert(props.comment._id);\r\n    const variables = {\r\n      writer: state.user ? state.user.firstName : \"Anonymous\",\r\n\r\n      responseTo: props.comment._id,\r\n\r\n      content: CommentValue,\r\n    };\r\n\r\n    Axios.post(POST_COMMENTS, variables).then((response) => {\r\n      if (response.data.success) {\r\n        console.log(response.data.result);\r\n\r\n        setCommentValue(\"\");\r\n        setOpenReply(!OpenReply);\r\n        props.refreshFunction(response.data.result);\r\n        toast.success(\"Comment Submitted\");\r\n      } else {\r\n        window.location.reload();\r\n      }\r\n    });\r\n  };\r\n\r\n  const actions = [\r\n    <span onClick={openReply} key=\"comment-basic-reply-to\">\r\n      Reply to {props.comment.writer}\r\n    </span>,\r\n  ];\r\n  return (\r\n    <div>\r\n      <section class=\"gradient-custom\">\r\n        <div class=\"container\">\r\n          <div class=\"row d-flex p-3\">\r\n            <div class=\"col-md-12 col-lg-10 col-xl-8\">\r\n              <div class=\"card\">\r\n                <div class=\"card-body\">\r\n                  <div class=\"row\">\r\n                    <div class=\"col\">\r\n                      <div class=\"d-flex flex-start\">\r\n                        <img\r\n                          class=\"rounded-circle shadow-1-strong me-3\"\r\n                          src=\"https://toppng.com/uploads/preview/user-account-management-logo-user-icon-11562867145a56rus2zwu.png\"\r\n                          alt=\"avatar\"\r\n                          width=\"65\"\r\n                          height=\"65\"\r\n                        />\r\n                        <div class=\"flex-grow-1 flex-shrink-1\">\r\n                          <div>\r\n                            <div class=\"d-flex justify-content-between align-items-center\">\r\n                              <p class=\"mb-1\">\r\n                                {props.comment.writer}\r\n                                <span class=\"small m-2\">{createdAt}</span>\r\n                              </p>\r\n                              <Link to=\"#\">\r\n                                <i class=\"fas fa-reply fa-xs\"></i>\r\n                                <span class=\"small\"> {actions}</span>\r\n                              </Link>\r\n                            </div>\r\n                            <p class=\"small mb-0\">{props.comment.content}</p>\r\n                          </div>\r\n                          {OpenReply && (\r\n                            <form onSubmit={onSubmit}>\r\n                              <textarea\r\n                                style={{ width: \"100%\", borderRadius: \"5px\" }}\r\n                                onChange={handleChange}\r\n                                value={CommentValue}\r\n                                className=\"form-control m-3\"\r\n                                placeholder=\"write some comments\"\r\n                              />\r\n\r\n                              <button\r\n                                className=\"btn btn-primary\"\r\n                                style={{\r\n                                  marginLeft: \"15px\",\r\n                                }}\r\n                              >\r\n                                Submit\r\n                              </button>\r\n                            </form>\r\n                          )}\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n\r\n      {/* <span style={{ marginLeft: \"40px\", color: \"black\" }}>\r\n        {props.comment.writer}\r\n      </span>\r\n      <span style={{ marginLeft: \"40px\", color: \"black\" }}>\r\n        {\" \"}\r\n        {props.comment.content}{\" \"}\r\n      </span>\r\n      <span style={{ marginLeft: \"40px\", color: \"black\" }}>\r\n        {\" \"}\r\n        {props.comment.createdAt}{\" \"}\r\n      </span>\r\n    \r\n      <br /> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SingleComment;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport SingleComment from \"./SingleComment\";\r\n\r\nfunction ReplyComment(props) {\r\n  const [ChildCommentNumber, setChildCommentNumber] = useState(0);\r\n  const [OpenReplyComments, setOpenReplyComments] = useState(false);\r\n  useEffect(() => {\r\n    let commentNumber = 0;\r\n    props.CommentLists.map((comment) => {\r\n      if (comment.responseTo === props.parentCommentId) {\r\n        commentNumber++;\r\n      }\r\n    });\r\n\r\n    setChildCommentNumber(commentNumber);\r\n  }, [props.CommentLists, props.parentCommentId]);\r\n\r\n  let renderReplyComment = (parentCommentId) =>\r\n    props.CommentLists.map((comment, index) => (\r\n      <React.Fragment>\r\n        {comment.responseTo === parentCommentId && (\r\n          <div key={index}>\r\n            <SingleComment\r\n              comment={comment}\r\n              refreshFunction={props.refreshFunction}\r\n            />\r\n            <ReplyComment\r\n              CommentLists={props.CommentLists}\r\n              parentCommentId={comment._id}\r\n              refreshFunction={props.refreshFunction}\r\n            />\r\n          </div>\r\n        )}\r\n      </React.Fragment>\r\n    ));\r\n\r\n  const handleChange = () => {\r\n    setOpenReplyComments(!OpenReplyComments);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {ChildCommentNumber > 0 && (\r\n        <p\r\n          style={{ fontSize: \"14px\", color: \"gray\", cursor: \"pointer\" }}\r\n          onClick={handleChange}\r\n        >\r\n          View {ChildCommentNumber} more comment(s)\r\n        </p>\r\n      )}\r\n      {\r\n        <div style={{ marginLeft: \"5rem\" }}>\r\n          {OpenReplyComments && renderReplyComment(props.parentCommentId)}\r\n        </div>\r\n      }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ReplyComment;\r\n","import React, { useState, useContext } from \"react\";\r\nimport { toast } from \"react-toastify\";\r\nimport { AuthContext } from \"../../components/store/auth-login\";\r\nimport axios from \"axios\";\r\nimport SingleComment from \"./SingleComment\";\r\nimport ReplyComment from \"./ReplyComment\";\r\nimport { POST_COMMENTS } from \"../../constant\";\r\n\r\nfunction Comments(props) {\r\n  const [Comment, setComment] = useState(\"\");\r\n  const [state] = useContext(AuthContext);\r\n  // console.log(state.user);\r\n  const handleChange = (e) => {\r\n    setComment(e.currentTarget.value);\r\n  };\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    const variables = {\r\n      content: Comment,\r\n      writer: state.user ? state.user.firstName : \"Anonymous\",\r\n    };\r\n    if (Comment === \"\") {\r\n      toast.error(\"Please write something\");\r\n      return;\r\n    }\r\n\r\n    axios.post(POST_COMMENTS, variables).then((res) => {\r\n      if (res.data.success) {\r\n        console.log(res.data);\r\n        toast.success(\"Comment Submitted\");\r\n        setComment(\"\");\r\n        props.refreshFunction(res.data.result);\r\n      } else {\r\n        window.location.reload();\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {/* <p\r\n        style={{\r\n          fontSize: \"1.5rem\",\r\n          fontWeight: \"bold\",\r\n        }}\r\n      >\r\n        Companies Review and Discussion Forum\r\n      </p> */}\r\n      <span\r\n        style={{\r\n          fontSize: \"1.5rem\",\r\n          fontWeight: \"bold\",\r\n        }}\r\n      >\r\n        Top Comments({props.CommentLists.length})\r\n      </span>\r\n      <br />\r\n      <hr />\r\n      {/* Root Comment Form */}\r\n      <form\r\n        style={{ display: \"flex\", width: \"100%\", maxWidth: \"100%\" }}\r\n        onSubmit={onSubmit}\r\n      >\r\n        <textarea\r\n          onChange={handleChange}\r\n          value={Comment}\r\n          placeholder=\"write some comments\"\r\n          className=\"form-control p-2\"\r\n        />\r\n        <br />\r\n        <button\r\n          className=\"\"\r\n          style={{\r\n            width: \"20%\",\r\n            height: \"62px\",\r\n            backgroundColor: \"#0D6EFD\",\r\n            color: \"white\",\r\n            border: \"none\",\r\n            marginLeft: \"10px\",\r\n            borderRadius: \"5px\",\r\n          }}\r\n        >\r\n          Submit\r\n        </button>\r\n      </form>\r\n      {props.CommentLists &&\r\n        props.CommentLists.map(\r\n          (comment, index) =>\r\n            !comment.responseTo && (\r\n              <React.Fragment>\r\n                <SingleComment\r\n                  comment={comment}\r\n                  key={index}\r\n                  refreshFunction={props.refreshFunction}\r\n                />\r\n                <ReplyComment\r\n                  CommentLists={props.CommentLists}\r\n                  parentCommentId={comment._id}\r\n                  refreshFunction={props.refreshFunction}\r\n                />\r\n              </React.Fragment>\r\n            )\r\n        )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Comments;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Comments from \"./Comments\";\r\nimport axios from \"axios\";\r\nimport { GET_COMMENTS } from \"../../constant\";\r\nconst CommentMain = () => {\r\n  const [CommentLists, setCommentLists] = useState([]);\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(GET_COMMENTS)\r\n      .then((res) => {\r\n        setCommentLists(res.data);\r\n        console.log(res.data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }, []);\r\n  const updateComment = (newComment) => {\r\n    setCommentLists(CommentLists.concat(newComment));\r\n  };\r\n  return (\r\n    <div\r\n      className=\"container\"\r\n      style={{\r\n        marginTop: \"6rem\",\r\n        marginBottom: \"6rem\",\r\n      }}\r\n    >\r\n      <Comments CommentLists={CommentLists} refreshFunction={updateComment} />\r\n\r\n      <hr />\r\n      {/* Comment Lists  */}\r\n      {console.log(CommentLists)}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CommentMain;\r\n","export const HOME_DATA = \"/api/getData\";\r\nexport const CREATE_DATA = \"/api/createData\";\r\nexport const DELETE_DATA = \"/api/deleteData\";\r\nexport const UPDATE_DATA = \"/api/updateData\";\r\n\r\nexport const CREATE_COURSE = \"/api/createCourse\";\r\nexport const DELETE_COURSE = \"/api/deleteCourse\";\r\nexport const GET_COURSE = \"/api/getCourse\";\r\nexport const UPDATE_COURSE = \"/api/updateCourse\";\r\n\r\nexport const GET_JOBS = \"/api/getJobs\";\r\nexport const CREATE_JOBS = \"/api/createJobs\";\r\nexport const DELETE_JOBS = \"/api/deleteJobs\";\r\nexport const FAV_JOBS = \"/api/getFavJobs\";\r\n\r\nexport const POST_NEWS_TICKER = \"/api/postNewsTicker\";\r\nexport const POST_TESTIMONIAL = \"/api/postTestimonial\";\r\nexport const GET_TESTIMONIAL = \"/api/getTestimonial\";\r\nexport const DELETE_TESTIMONIAL = \"/api/deleteTestimonial\";\r\nexport const GET_NEWS_TICKER = \"/api/getNewsTicker\";\r\n\r\nexport const SET_ROLE = \"/api/setRole\";\r\n\r\nexport const GET_ALL_USER = \"/api/getAllusers\";\r\nexport const DELETE_USER = \"/api/deleteUser\";\r\n\r\nexport const USERS = \"/api/users\";\r\n\r\nexport const PASSWORD_RESET = \"/api/password-reset\";\r\n\r\nexport const OPEN_AI = \"/api/openAi\";\r\n\r\nexport const ANALYZE_RESUME = \"/api/analyzeResume\";\r\n\r\nexport const GET_COMMENTS = \"/api/getComments\";\r\nexport const POST_COMMENTS = \"/api/postComment\";\r\n\r\nexport const LOCALHOST = \"\";\r\n\r\nexport const GOOGLE_LOGIN = \"/api/googlelogin\";\r\n\r\nexport const AUTH = \"/api/auth\";\r\n"],"names":["props","useContext","AuthContext","state","useState","CommentValue","setCommentValue","OpenReply","setOpenReply","date","Date","comment","createdAt","year","getFullYear","month","getMonth","day","getDate","hours","getHours","minutes","getMinutes","seconds","getSeconds","actions","onClick","writer","class","src","alt","width","height","Link","to","content","onSubmit","e","preventDefault","variables","user","firstName","responseTo","_id","Axios","POST_COMMENTS","then","response","data","success","console","log","result","refreshFunction","toast","window","location","reload","style","borderRadius","onChange","currentTarget","value","className","placeholder","marginLeft","ReplyComment","parentCommentId","ChildCommentNumber","setChildCommentNumber","OpenReplyComments","setOpenReplyComments","useEffect","commentNumber","CommentLists","map","fontSize","color","cursor","index","Comment","setComment","fontWeight","length","display","maxWidth","axios","res","backgroundColor","border","setCommentLists","GET_COMMENTS","catch","err","marginTop","marginBottom","newComment","concat","HOME_DATA","CREATE_DATA","DELETE_DATA","UPDATE_DATA","CREATE_COURSE","DELETE_COURSE","GET_COURSE","UPDATE_COURSE","GET_JOBS","CREATE_JOBS","DELETE_JOBS","FAV_JOBS","POST_NEWS_TICKER","POST_TESTIMONIAL","GET_TESTIMONIAL","DELETE_TESTIMONIAL","GET_NEWS_TICKER","SET_ROLE","GET_ALL_USER","DELETE_USER","USERS","PASSWORD_RESET","OPEN_AI","ANALYZE_RESUME","LOCALHOST","GOOGLE_LOGIN","AUTH"],"sourceRoot":""}